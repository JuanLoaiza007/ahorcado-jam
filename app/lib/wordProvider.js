const WORDS = [
  "algoritmo",
  "programacion",
  "desarrollo",
  "ingenieria",
  "sistemas",
  "javascript",
  "python",
  "java",
  "php",
  "ruby",
  "golang",
  "typescript",
  "react",
  "angular",
  "vue",
  "nextjs",
  "nodejs",
  "express",
  "django",
  "laravel",
  "spring",
  "hibernate",
  "mongodb",
  "mysql",
  "postgresql",
  "redis",
  "elasticsearch",
  "docker",
  "kubernetes",
  "aws",
  "azure",
  "googlecloud",
  "linux",
  "windows",
  "macos",
  "ubuntu",
  "debian",
  "apache",
  "nginx",
  "tomcat",
  "jenkins",
  "gitlab",
  "github",
  "bitbucket",
  "agile",
  "scrum",
  "kanban",
  "waterfall",
  "devops",
  "testing",
  "unitario",
  "integracion",
  "funcional",
  "automatizacion",
  "seguridad",
  "criptografia",
  "autenticacion",
  "autorizacion",
  "firewall",
  "api",
  "rest",
  "graphql",
  "json",
  "xml",
  "html",
  "css",
  "less",
  "bootstrap",
  "tailwind",
  "material",
  "jquery",
  "webpack",
  "babel",
  "eslint",
  "prettier",
  "typescript",
  "flow",
  "redux",
  "zustand",
  "context",
  "hooks",
  "componentes",
  "props",
  "estado",
  "efectos",
  "ciclos",
  "condicionales",
  "funciones",
  "clases",
  "objetos",
  "arrays",
  "strings",
  "numeros",
  "booleanos",
  "null",
  "undefined",
  "promesas",
  "async",
  "await",
  "callbacks",
  "eventos",
  "localstorage",
  "sessionstorage",
  "cookies",
  "websockets",
  "responsive",
  "accesibilidad",
  "semantico",
  "microservicios",
  "monolito",
  "arquitectura",
  "patrones",
  "singleton",
  "factory",
  "observer",
  "strategy",
  "decorator",
  "facade",
  "adapter",
  "composite",
  "proxy",
  "middleware",
  "routing",
  "controladores",
  "modelos",
  "vistas",
  "migraciones",
  "seeds",
  "fixtures",
  "query",
  "joins",
  "indices",
  "transacciones",
  "normalizacion",
  "denormalizacion",
  "sharding",
  "replicacion",
  "backup",
  "recuperacion",
  "monitorizacion",
  "logs",
  "alertas",
  "metricas",
  "dashboards",
];

/**
 * Retorna una palabra aleatoria de la lista
 * @returns {string}
 */
export function getRandomWord() {
  const idx = Math.floor(Math.random() * WORDS.length);
  const selectedWord = WORDS[idx];

  // Imprimir la palabra solo en entorno de desarrollo
  if (process.env.NEXT_PUBLIC_ENVIRONMENT === "develop") {
    console.log("Palabra a adivinar:", selectedWord);
  }

  return selectedWord;
}
